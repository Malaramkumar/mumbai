import React from 'react';
import "./ECEProjectDevelopmentCenter.scss";

const faqs = [
  {
    question: "Which stacks and platforms are best for CPS prototyping?",
    answer:
      "For quick bringâ€‘up use Arduino IDE and ESP32/Raspberry Pi with Python/C++; for modeling/control use MATLAB/Simulink or LabVIEW; for dashboards use Nodeâ€‘RED/Blynk/AWS IoT; message transport via MQTT/HTTP with TLS."
  },
  {
    question: "How do you ensure realâ€‘time reliability and safety in CPS?",
    answer:
      "Adopt timeâ€‘synchronized sampling, watchdogs, bounded control loops, QoS messaging, fallback states, and hardwareâ€‘inâ€‘theâ€‘loop tests. Log latency/jitter budgets and verify under stress (noise, dropouts, brownouts)."
  },
  {
    question: "How are security and privacy handled for IIoT data?",
    answer:
      "Use TLS, token rotation, device certificates, roleâ€‘based access, and encrypted atâ€‘rest storage. Minimize PII, apply edge preâ€‘processing, and maintain signed firmware/OTA with audit trails."
  },
  {
    question: "What deliverables are expected per academic level?",
    answer:
      "B.Tech: working node/control demo + latency/power report; M.Tech: scaled multiâ€‘node CPS + digital twin + benchmarks + publication draft; Ph.D.: novel CPS algorithms/architectures + multiâ€‘site validation + artifacts/paper/IP."
  },
  {
    question: "Can projects be coâ€‘supervised with Mumbai industry labs?",
    answer:
      "Yesâ€”coâ€‘supervision includes useâ€‘case scoping, access to benches and pilot lines, compliance reviews, and joint milestones. IP and data usage are defined via MoU at project induction."
  }
];

const CyberPhysicalSmartSensorsMumbai = () => {
  return (
    <div className="ECEProjectDevelopmentCenter">
      <div className="ECEProjectDevelopmentCenter-main">
        <div className="ECEProjectDevelopmentCenter-grid">

          {/* Left Column â€“ Keywords */}
          <div className="ECEProjectDevelopmentCenter-left">
            <h3>ðŸ”‘ Keywords</h3>
            <ul>
              <li>ECE Cyberâ€‘Physical Systems</li>
              <li>Smart Sensor Networks</li>
              <li>Industrial IoT (IIoT)</li>
              <li>Realâ€‘Time Control ECE</li>
              <li>Digital Twins & HIL</li>
              <li>ESP32 Raspberry Pi</li>
              <li>Nodeâ€‘RED MQTT TLS</li>
              <li>LabVIEW MATLAB CPS</li>
              <li>Predictive Maintenance</li>
              <li>IEEE CPS 2023â€“2025</li>
            </ul>
          </div>

          {/* Center Column â€“ Main Content */}
          <div className="ECEProjectDevelopmentCenter-center">
            <h1>Cyberâ€‘Physical Systems and Smart Sensors â€“ Project Development Center (Mumbaiâ€‘Based)</h1>

            <section className="ECEProjectDevelopmentCenter-intro">
              <p>
                <strong>Overview</strong> â€” This center integrates realâ€‘time sensing, feedback control, and digital intelligence to build responsive, reliable CPS for automation, smart infrastructure, and urban mobility. In Mumbaiâ€™s automation corridors across Thane and Navi Mumbai, projects span sensor calibration, embedded control, and cloud integration with IEEEâ€‘aligned engineering workflows.
              </p>
            </section>

            <section className="ECEProjectDevelopmentCenter-ecosystem">
              <h2>Mumbai CPS & sensor ecosystem</h2>
              <p>
                With active manufacturing and smartâ€‘city pilots, teams can design sensor nodes, deterministic controllers, and dashboards, then validate via hardwareâ€‘inâ€‘theâ€‘loop and pilot deployments. Typical tooling includes Proteus for early simulation, Arduino IDE for MCU bringâ€‘up, and LabVIEW/Simulink for control and plant modeling.
              </p>
            </section>

            <section className="ECEProjectDevelopmentCenter-table">
              <h2>Technological & industrial comparison</h2>
              <div className="ECEProjectDevelopmentCenter-table-container">
                <table>
                  <thead>
                    <tr>
                      <th>Technology area</th>
                      <th>Industrial applications (Mumbai)</th>
                      <th>Tools & platforms</th>
                      <th>Collaboration focus</th>
                    </tr>
                  </thead>
                  <tbody>
                    <tr>
                      <td>Smart sensor networks</td>
                      <td>Industrial automation, environment</td>
                      <td>Arduino IDE, Proteus</td>
                      <td>Calibration, power & enclosure design</td>
                    </tr>
                    <tr>
                      <td>CPS feedback control</td>
                      <td>Robotics, process control</td>
                      <td>LabVIEW, MATLAB/Simulink</td>
                      <td>HIL, safety states, watchdogs</td>
                    </tr>
                    <tr>
                      <td>Industrial IoT (IIoT)</td>
                      <td>Smart factories, logistics</td>
                      <td>Nodeâ€‘RED, AWS IoT Core</td>
                      <td>QoS messaging, OTA, device twins</td>
                    </tr>
                    <tr>
                      <td>Intelligent feedback</td>
                      <td>Predictive maintenance</td>
                      <td>Python + Arduino, MQTT</td>
                      <td>Anomaly detection, alerts</td>
                    </tr>
                    <tr>
                      <td>Embedded CPS platforms</td>
                      <td>Healthcare, mobility systems</td>
                      <td>ESP32, Raspberry Pi, LabVIEW RT</td>
                      <td>Edge compute, secure telemetry</td>
                    </tr>
                  </tbody>
                </table>
              </div>
              <p>
                The matrix aligns CPS building blocks with Mumbaiâ€™s automation and smartâ€‘infrastructure programs.
              </p>
            </section>

            <section className="ECEProjectDevelopmentCenter-cycle">
              <h2>B.Tech project development cycle</h2>
              <p>
                Foundations in embedded I/O, sensor networks, and basic closedâ€‘loop control, moving from simulation to real prototypes.
              </p>
              <ul>
                <li><strong>Simulate</strong> â€” Proteus models for sensors/actuators and timing checks.</li>
                <li><strong>Prototype</strong> â€” ESP32/Arduino nodes; calibrated sensing and debounced inputs.</li>
                <li><strong>Connect</strong> â€” MQTT/HTTP with TLS; basic dashboard and alerts.</li>
                <li><strong>Control</strong> â€” PID/ONâ€‘OFF for target processes; safety interlocks.</li>
                <li><strong>Report</strong> â€” Latency, jitter, power, and environmental robustness.</li>
              </ul>
              <p>
                Outcome: a functioning CPS node/control demo with reproducible firmware and measurements.
              </p>

              <h2>M.Tech project development cycle</h2>
              <p>
                Scalable CPS architectures with digital twins, multiâ€‘node orchestration, and predictive models.
              </p>
              <ul>
                <li><strong>System modeling</strong> â€” Plant + controller; disturbance and fault injection.</li>
                <li><strong>Digital twin</strong> â€” Shadow devices, parameter drift, whatâ€‘if simulations.</li>
                <li><strong>Data layer</strong> â€” Edge aggregation, QoS streams, OTA update flows.</li>
                <li><strong>AI feedback</strong> â€” Predictive maintenance, adaptive setpoints.</li>
                <li><strong>Validation</strong> â€” HIL rigs, longâ€‘run stability, IEEEâ€‘style draft.</li>
              </ul>
              <p>
                Outcome: a multiâ€‘node CPS with twinâ€‘aided tuning, clear KPIs, and publicationâ€‘ready results.
              </p>

              <h2>Ph.D. project development cycle</h2>
              <p>
                Novel distributed CPS algorithms, reliable comms, and energyâ€‘aware sensing with realâ€‘world pilots.
              </p>
              <ul>
                <li><strong>Research gaps</strong> â€” Timeâ€‘critical scheduling, consensus, fault tolerance.</li>
                <li><strong>Algorithms</strong> â€” Resourceâ€‘aware control, secure synchronization.</li>
                <li><strong>Implementation</strong> â€” RT runtimes, edge ML, layered security.</li>
                <li><strong>Evaluation</strong> â€” Multiâ€‘site pilots, SLA/uptime, MTBF/MTTR.</li>
                <li><strong>Outcomes</strong> â€” Papers, datasets, and IP for industrial adoption.</li>
              </ul>
              <p>
                Outcome: original CPS methods with deployments and reproducible artifacts.
              </p>
            </section>

            <section className="ECEProjectDevelopmentCenter-project-titles">
              <h2>IEEEâ€‘aligned project titles</h2>
              <ul>
                <li>Realâ€‘Time CPS for Industrial Process Automation</li>
                <li>Smart Sensorâ€‘Integrated Feedback Control Architecture</li>
                <li>Edgeâ€‘Enabled Predictive Maintenance for Smart Manufacturing</li>
                <li>IoTâ€‘Driven Adaptive Control using ESP32</li>
                <li>Energyâ€‘Efficient Wireless Sensor Network for IIoT</li>
                <li>CPS Framework for Smart Waste Management</li>
                <li>Distributed Sensor Systems for Urban Infrastructure Monitoring</li>
                <li>AIâ€‘Assisted Feedback Control in CPS</li>
              </ul>
              <p>
                Titles are scoped for twinâ€‘backed validation, safety margins, and field deployability.
              </p>
            </section>

            <section className="ECEProjectDevelopmentCenter-conclusion">
              <h2>Conclusion</h2>
              <p>
                By combining robust sensing, secure connectivity, and verifiable control, the center delivers CPS that withstand realâ€‘world variability. Students progress from models to hardwareâ€‘inâ€‘theâ€‘loop and pilot deployments, aligning with IEEE methodology and Mumbaiâ€™s industrial ecosystem.
              </p>
            </section>

            <section className="kerala-alluniversityfaq-section">
              <h2>Frequently Asked Questions</h2>
              <div className="kerala-faq-items">
                {faqs.map((f, i) => (
                  <details key={i}>
                    <summary>{f.question}</summary>
                    <p>{f.answer}</p>
                  </details>
                ))}
              </div>
              <script
                type="application/ld+json"
                dangerouslySetInnerHTML={{
                  __html: JSON.stringify({
                    "@context": "https://schema.org",
                    "@type": "FAQPage",
                    "mainEntity": faqs.map(f => ({
                      "@type": "Question",
                      "name": f.question,
                      "acceptedAnswer": { "@type": "Answer", "text": f.answer }
                    }))
                  })
                }}
              />
            </section>
          </div>

          {/* Right Column â€“ Related Services */}
          <div className="ECEProjectDevelopmentCenter-right">
            <h3>ðŸ”— Related ECE fields</h3>
            <ul>
              <li><a href="/embedded-systems-mumbai">Embedded Systems</a></li>
              <li><a href="/communication-systems-mumbai">Communication Systems</a></li>
              <li><a href="/ai-ml-electronics-mumbai">AI & ML in Electronics</a></li>
              <li><a href="/power-electronics-mumbai">Power Electronics</a></li>
              <li><a href="/wireless-security-mumbai">Wireless Security</a></li>
            </ul>
          </div>

        </div>
      </div>
    </div>
  );
};

export default CyberPhysicalSmartSensorsMumbai;
